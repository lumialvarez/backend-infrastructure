version: "3.7"

networks:
  backend-services:
    external: true

services:
###### Utility services #######
  postgresql:
    image: postgres:14.1
    container_name: postgresql
    restart: unless-stopped
    networks:
      - backend-services
    volumes:
      - /var/lib/postgres/:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: #{DATASOURCE_PASSWORD}#

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    restart: unless-stopped
    networks:
      - backend-services
    volumes:
      - /var/lib/rabbitmq/:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

###### Custom services #######
  go-api-gateway:
    image: lmalvarez/go-api-gateway:1.6.2
    container_name: go-api-gateway
    restart: unless-stopped
    networks:
      - backend-services
    ports:
      - "9191:9191"
    environment:
      SCOPE: "prod"
    extra_hosts:
      - "lmalvarez.com:#{INTERNAL_IP}#"
    depends_on:
      - postgresql

  go-grpc-auth-service:
    image: lmalvarez/go-grpc-auth-service:1.0.2
    container_name: go-grpc-auth-service
    restart: unless-stopped
    networks:
      - backend-services
    ports:
      - "50051:50051"
    environment:
      SCOPE: "prod"
    extra_hosts:
      - "lmalvarez.com:#{INTERNAL_IP}#"
    depends_on:
      - postgresql

  go-grpc-profile-service:
    image: lmalvarez/go-grpc-profile-service:1.0.1
    container_name: go-grpc-profile-service
    restart: unless-stopped
    networks:
      - backend-services
    ports:
      - "50052:50052"
    environment:
      SCOPE: "prod"
    extra_hosts:
      - "lmalvarez.com:#{INTERNAL_IP}#"
    depends_on:
      - postgresql

  personal-website-services:
    image: lmalvarez/personal-website-services:1.0.3
    container_name: personal-website-services
    restart: unless-stopped
    networks:
      - backend-services
    ports:
      - "9292:9292"
    extra_hosts:
      - "lmalvarez.com:#{INTERNAL_IP}#"

###### Metrics services #######
  grafana:
    image: grafana/grafana:9.3.2
    container_name: grafana
    restart: unless-stopped
    networks:
      - backend-services
    volumes:
      - /var/lib/grafana:/var/lib/grafana
    ports:
      - "3000:3000"

  prometheus:
    image: prom/prometheus:v2.41.0
    container_name: prometheus
    restart: unless-stopped
    networks:
      - backend-services
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - /var/lib/prometheus:/prometheus
    ports:
      - "9290:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=1y'
      - '--web.enable-lifecycle'

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node_exporter
    restart: unless-stopped
    networks:
      - backend-services
    ports:
      - "9291:9100"
    ###### linux
    command:
      - '--path.rootfs=/host'
    pid: host
    volumes:
      - '/:/host:ro,rslave'
        ###### windows
        # volumes:
        # - /proc:/host/proc:ro
        # - /sys:/host/sys:ro
        # command:
        # - '--path.procfs=/host/proc'
        # - '--path.sysfs=/host/sys'
        # - --collector.filesystem.ignored-mount-points
      # - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    networks:
      - backend-services
    expose:
      - "8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
